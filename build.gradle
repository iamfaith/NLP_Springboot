group 'org.example'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.2.RELEASE")
    }
}
repositories {
    mavenCentral()
}


sourceSets {
    main {
        java {
            srcDir 'src/ChatBot'
//            srcDir 'build/swagger-code-dummy/src/main/java'
        }
    }
}


dependencies {
    // testCompile group: 'junit', name: 'junit', version: '4.11'


    compile "edu.stanford.nlp:stanford-corenlp:3.9.2"
    compile "org.apache.pdfbox:pdfbox:2.0.13"
    compile "edu.stanford.nlp:stanford-parser:3.9.2"

    compile "cn.hutool:hutool-all:4.1.8"
    // compile "edu.stanford.nlp:stanford-parser:3.9.2"
    compile fileTree(dir: '/home/zixiang/NLP/jar_de', include: ['*.jar'])

    // compile('org.springframework.boot:spring-boot-starter-aop:1.4.2.RELEASE')
    compile("org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE")

}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

artifacts {
    copy {
        from configurations.runtime
        into 'build/libs'
    }
}

//jar {
//    manifest {
//        attributes(
//                'Main-Class': 'my.project.main',
//        )
//    }
//}
//
//task fatJar(type: Jar) {
//    manifest.from jar.manifest
//    classifier = 'all'
//    from {
//        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    } {
//        exclude "META-INF/*.SF"
//        exclude "META-INF/*.DSA"
//        exclude "META-INF/*.RSA"
//    }
//    with jar
//}
//
//artifacts {
//    archives fatJar
//}